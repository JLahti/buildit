#cloud-config

# Hostname management
preserve_hostname: False
hostname: ci
fqdn: ci.local

swap:
  filename: /dev/vdb

# If there's a data disk
fs_setup:
  - label: data
    filesystem: ext4
    device: /dev/vdc

mounts:
#  This / fstab entry has to be present before boot to ensure the drive is mounted rw :/
#  - [ vda, /, "ext4", "rw,noatime,user_xattr,acl,barrier=1,data=ordered", "0", "0"]
  - [ vdb, none, "swap", none, "0", "0"]
  - [ vdc, /data, "ext4", "rw,noatime,user_xattr,acl,barrier=1,data=ordered", "0", "0"]

# Remove cloud-init when finished with it
#runcmd:
#  - [ rpm, -e, cloud-init ]

chpasswd:
  list: |
    root:skytree
  expire: False

# Needs enabling resolv_conf module in cloud.cfg
#manage_resolv_conf: true
#resolv_conf:
#  nameservers: ['10.10.10.1']

# ca-certs: https://cloudinit.readthedocs.io/en/18.2/topics/modules.html#ca-certs

zypper:
  repos:
    - id: obs_server_mer-2.5_42.1
      name: Mer OBS 2.5 on 42.1 (openSUSE_42.3)
      type: rpm-md
      baseurl: http://repo.merproject.org/obs/obs:/server:/mer-2.5:/42.1/openSUSE_42.3/
      gpgcheck: 0
      enabled: 1
      autorefresh: 1
      priority: 69
    - id: MINT
      name: MINT (openSUSE_42.3)
      baseurl: http://repo.merproject.org/obs/mint/openSUSE_42.3/
      enabled: 1
      gpgcheck: 0
      autorefresh: 1
      type: rpm-md
      priority: 69
    - id: mer-infra_stable
      name: Mer Infra stable (openSUSE_42.3)
      baseurl: http://repo.merproject.org/obs/mer-infra:/stable/openSUSE_42.3/
      enabled: 1
      gpgcheck: 0
      autorefresh: 1
      type: rpm-md
      priority: 69

package_update: true
package_upgrade: true
package_reboot_if_required: true
packages:
  - obs-api
  - obs-server
  - obs-service-tar-git
  - obs-worker
  - apache2
  - apache2-mod_xforward
  - rubygem-passenger-apache2
  - memcached

write_files:
  - path: /etc/zypp/zypper.conf
    owner: root:root
    permissions: '0644'
    content: |
      [solver]
      installRecommends = no

  - path: /root/my.defaults
    owner: root:root
    permissions: '0700'
    content: |
      [mysql]
      user = root
      password = ''

  - path: /srv/www/obs/api/config/database.yml
    owner: root:www
    permissions: '0640'
    content: |
      production:
        adapter: mysql2
        database: api_production
        username: obs
        password: skytree
        encoding: utf8
        timeout: 15
        pool: 30

  - path: /root/db_init.sh
    owner: root:root
    permissions: '0700'
    content: |
      #!/bin/bash
      set -eu
      
      mysql --defaults-file=/root/my.defaults <<< "
      UPDATE mysql.user SET Password='*973004CBB77C6F6BA1BF66B1C47DD02CC91A167D' WHERE User='root';
      DELETE FROM mysql.user WHERE User='';
      DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');
      DROP DATABASE IF EXISTS test;
      DELETE FROM mysql.db WHERE Db='test' OR Db='test_%';
      CREATE DATABASE api_production;
      CREATE USER 'obs'@'%';
      CREATE USER 'obs'@'localhost';
      UPDATE mysql.user SET Password='*973004CBB77C6F6BA1BF66B1C47DD02CC91A167D' WHERE User='obs';
      GRANT all privileges ON api_production.* TO 'obs'@'%';
      GRANT all privileges ON api_production.* TO 'obs'@'localhost';
      FLUSH PRIVILEGES;
      "

  - path: /root/db_populate.sh
    owner: root:root
    permissions: '0700'
    content: |
      #!/bin/bash
      set -eu
      cd /srv/www/obs/api
      RAILS_ENV="production" rake db:setup writeconfiguration ts:index ts:start

  - path: /root/apache_config.sh
    owner: root:root
    permissions: '0700'
    content: |
      #!/bin/bash
      set -eu
      
      appendval()
      {
          f="/etc/sysconfig/apache2"
          sed -rn 's@^\s*'"${1}"'\s*=\s*"([^"]*)"\s*$@\1@ p' "${f}" |
              grep -E '(^| )'"${2}"'($| )' &&
                  return
          sed -ri 's@^\s*('"${1}"'\s*=\s*"[^"]*)"\s*$@\1 '"${2}"'"@' "${f}"
      }
      
      appendval APACHE_MODULES passenger
      appendval APACHE_MODULES rewrite
      appendval APACHE_MODULES proxy
      appendval APACHE_MODULES proxy_http
      appendval APACHE_MODULES xforward
      appendval APACHE_MODULES headers
      appendval APACHE_MODULES socache_shmcb
      
      appendval APACHE_SERVER_FLAGS SSL

  - path: /root/cert_setup.sh
    owner: root:root
    permissions: '0700'
    content: |
      #!/bin/bash
      set -eu
      
      mkdir -p /srv/obs/certs
      key=/srv/obs/certs/server.key
      csr=/srv/obs/certs/server.csr
      crt=/srv/obs/certs/server.crt
      pem=/srv/obs/certs/server.pem
      subj="/C=NA/ST=NA/L=na/O=na/OU=na/CN=ci.local"
      certs=/etc/ssl/certs
      
      openssl genrsa -out "${key}" 1024
      openssl req -new -key "${key}" -out "${csr}" -subj "${subj}"
      openssl x509 -req -days 365 -in "${csr}" -signkey "${key}" -out "${crt}"
      cat "${key}" "${crt}" > "${pem}"
      
      cp "${pem}" "${certs}"
      c_rehash "${certs}"

runcmd:
  - [ systemctl, start, obsrepserver ]
  - [ systemctl, start, obssrcserver ]
  - [ systemctl, start, mysql ]
  - [ /root/db_init.sh ]
  - [ /root/db_populate.sh ]
  - [ rm, -f, /root/my.defaults, /root/db_init.sh, /root/db_populate.sh ]
  - [ /root/apache_config.sh ]
  - [ rm, -f, /root/apache_config.sh ]
  - [ /root/cert_setup.sh ]
  - [ rm, -f, /root/cert_setup.sh ]
  - [ systemctl, start, apache2 ]
  - [ systemctl, start, obsapidelayed ]
  - [ systemctl, start, memcached ]

final_message: "---- cloud-init finished ----"
