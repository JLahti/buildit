#cloud-config

# Hostname management
preserve_hostname: False
hostname: ci
fqdn: ci.local

swap:
  filename: /dev/vdb

# If there's a data disk
fs_setup:
  - label: data
    filesystem: ext4
    device: /dev/vdc

mounts:
#  This / fstab entry has to be present before boot to ensure the drive is mounted rw :/
#  - [ vda, /, "ext4", "rw,noatime,user_xattr,acl,barrier=1,data=ordered", "0", "0"]
  - [ vdb, none, "swap", none, "0", "0"]
  - [ vdc, /data, "ext4", "rw,noatime,user_xattr,acl,barrier=1,data=ordered", "0", "0"]

# Remove cloud-init when finished with it
#runcmd:
#  - [ rpm, -e, cloud-init ]

chpasswd:
  list: |
    root:skytree
  expire: False

# Needs enabling resolv_conf module in cloud.cfg
#manage_resolv_conf: true
#resolv_conf:
#  nameservers: ['10.10.10.1']

# ca-certs: https://cloudinit.readthedocs.io/en/18.2/topics/modules.html#ca-certs

zypper:
  repos:
    - id: obs_server_mer-2.5_42.1
      name: Mer OBS 2.5 on 42.1 (openSUSE_42.3)
      type: rpm-md
      baseurl: http://repo.merproject.org/obs/obs:/server:/mer-2.5:/42.1/openSUSE_42.3/
      gpgcheck: 0
      enabled: 1
      autorefresh: 1
      priority: 69
    - id: MINT
      name: MINT (openSUSE_42.3)
      baseurl: http://repo.merproject.org/obs/mint/openSUSE_42.3/
      enabled: 1
      gpgcheck: 0
      autorefresh: 1
      type: rpm-md
      priority: 69
    - id: mer-infra_stable
      name: Mer Infra stable (openSUSE_42.3)
      baseurl: http://repo.merproject.org/obs/mer-infra:/stable/openSUSE_42.3/
      enabled: 1
      gpgcheck: 0
      autorefresh: 1
      type: rpm-md
      priority: 69

package_update: true
package_upgrade: true
package_reboot_if_required: true
packages:
  - ca-certificates-mozilla
  - obs-api
  - obs-server
  - obs-service-tar-git
  - obs-worker
  - apache2
  - apache2-mod_xforward
  - rubygem-passenger-apache2
  - memcached

write_files:
  - path: /etc/zypp/zypper.conf
    owner: root:root
    permissions: '0644'
    content: |
      [solver]
      installRecommends = no

  - path: /root/my.defaults
    owner: root:root
    permissions: '0700'
    content: |
      [mysql]
      user = root
      password = ''

  - path: /srv/www/obs/api/config/database.yml
    owner: root:www
    permissions: '0640'
    content: |
      production:
        adapter: mysql2
        database: api_production
        username: obs
        password: skytree
        encoding: utf8
        timeout: 15
        pool: 30

  - path: /root/db_init.sh
    owner: root:root
    permissions: '0700'
    content: |
      #!/bin/bash
      set -eu
      
      mysql --defaults-file=/root/my.defaults <<< "
      UPDATE mysql.user SET Password='*973004CBB77C6F6BA1BF66B1C47DD02CC91A167D' WHERE User='root';
      DELETE FROM mysql.user WHERE User='';
      DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');
      DROP DATABASE IF EXISTS test;
      DELETE FROM mysql.db WHERE Db='test' OR Db='test_%';
      CREATE DATABASE api_production;
      CREATE USER 'obs'@'%';
      CREATE USER 'obs'@'localhost';
      UPDATE mysql.user SET Password='*973004CBB77C6F6BA1BF66B1C47DD02CC91A167D' WHERE User='obs';
      GRANT all privileges ON api_production.* TO 'obs'@'%';
      GRANT all privileges ON api_production.* TO 'obs'@'localhost';
      FLUSH PRIVILEGES;
      "

  - path: /root/db_populate.sh
    owner: root:root
    permissions: '0700'
    content: |
      #!/bin/bash
      set -eu
      cd /srv/www/obs/api

      # Adding our default archs. Maybe just write the whole configuration.xml?
      sed -i "s/armv7l i586/armv7el armv8el i586/" db/seeds.rb

      RAILS_ENV="production" rake db:setup writeconfiguration ts:index ts:start

  - path: /root/apache_config.sh
    owner: root:root
    permissions: '0700'
    content: |
      #!/bin/bash
      set -eu
      
      appendval()
      {
          f="/etc/sysconfig/apache2"
          sed -rn 's@^\s*'"${1}"'\s*=\s*"([^"]*)"\s*$@\1@ p' "${f}" |
              grep -E '(^| )'"${2}"'($| )' &&
                  return
          sed -ri 's@^\s*('"${1}"'\s*=\s*"[^"]*)"\s*$@\1 '"${2}"'"@' "${f}"
      }
      
      appendval APACHE_MODULES passenger
      appendval APACHE_MODULES rewrite
      appendval APACHE_MODULES proxy
      appendval APACHE_MODULES proxy_http
      appendval APACHE_MODULES xforward
      appendval APACHE_MODULES headers
      appendval APACHE_MODULES socache_shmcb
      
      appendval APACHE_SERVER_FLAGS SSL

  - path: /root/cert_setup.sh
    owner: root:root
    permissions: '0700'
    content: |
      #!/bin/bash
      set -eu
      
      mkdir -p /srv/obs/certs
      key=/srv/obs/certs/server.key
      csr=/srv/obs/certs/server.csr
      crt=/srv/obs/certs/server.crt
      pem=/srv/obs/certs/server.pem
      subj="/C=NA/ST=NA/L=na/O=na/OU=na/CN=ci.local"
      certs=/etc/ssl/certs
      
      openssl genrsa -out "${key}" 1024
      openssl req -new -key "${key}" -out "${csr}" -subj "${subj}"
      openssl x509 -req -days 365 -in "${csr}" -signkey "${key}" -out "${crt}"
      cat "${key}" "${crt}" > "${pem}"
      
      cp "${pem}" "${certs}"
      c_rehash "${certs}"

  - path: /root/services.sh
    owner: root:root
    permissions: '0700'
    content: |
      #!/bin/bash
      set -eu
      
      S=(
          obsrepserver
          obssrcserver
          mysql
          obsscheduler
          obsdispatcher
          obspublisher
          obsservice
          memcached
          apache2
          obsapidelayed
          obswarden
          obsworker
          obsservicedispatch
          obsdodup
          obsdeltastore
      )
      while test "${1}" = "-s"
      do
          shift
          S+=( "${1}" )
          shift
      done
      for service in "${S[@]}"
      do
        for action in "${@}"
        do
          systemctl "${action}" "${service}"
        done
      done

  - path: /root/fixup.sh
    owner: root:root
    permissions: '0700'
    content: |
      #!/bin/bash
      set -eu
      
      mkdir -p /srv/www/obs/api/log
      chown -R wwwrun.www /srv/www/obs/api/log
      
      mkdir -p /srv/www/obs/api/tmp
      chown -R wwwrun.www /srv/www/obs/api/tmp
      
      mkdir -p /run/passenger
      chown -R wwwrun.www /run/passenger
      
      mkdir -p /srv/obs/repos
      chown -R obsrun:obsrun /srv/obs/repos
      
      mkdir -p /srv/obs/dods
      chown -R obsrun:obsrun /srv/obs/dods

      sed -ri '
          s@^(\s*)Allow\s+from\s+all\s*$@\1Require all granted@
        ' /etc/apache2/vhosts.d/obs.conf
      sed -ri '
          s@^[#[:space:]]*(use_xforward:)\s*.*@\1 true@
        ' /srv/www/obs/api/config/options.yml
      sed -ri '
          s@^[#[:space:]]*(frontend_host:)\s*.*@\1 localhost@
        ' /srv/www/obs/api/config/options.yml
      
      #
      ## see https://bz.apache.org/bugzilla/show_bug.cgi?id=58498
      # sed -ri '
      #     s@^(\s*APACHE_MODULES\s*=\s*)(("[^"]+\s+)|("\s*))autoindex((\s+[^"]+\s*"|\s*"))@\1\2\5@
      #   ' /etc/sysconfig/apache2
      zypper ar http://ftp5.gwdg.de/pub/opensuse/discontinued/distribution/leap/42.1/repo/oss/ leap_42.1
      zypper ref
      zypper in -y --oldpackage apache2-2.4.16-7.1.x86_64 apache2-prefork-2.4.16-7.1.x86_64
      systemctl restart apache2

  - path: /root/update.sh
    owner: root:root
    permissions: '0700'
    content: |
      #!/bin/bash
      set -eu

      if
          test -z "$(find /host/ -maxdepth 1 -name '*.repo' -print -quit)"
      then
        echo "No repos for running the update!"
        exit 1
      fi

      systemctl stop obsrepserver
      systemctl stop obssrcserver

      zypper rr obs_server_mer-2.5_42.1
      for repo in /host/*.repo
      do
        echo "Adding repo from ${repo}"
        zypper ar "${repo}"
      done
      zypper ref
      rpm -qa | sort -u > /tmp/ci-preupdate_rpm-qa.txt
      zypper dup -y --no-recommends --details
      rpm -qa | sort -u > /tmp/ci-postupdate_rpm-qa.txt
      
      rm /srv/www/obs/api/db/migrate/20181030161701_add_package_column_to_flags_table.rb
      rm /srv/www/obs/api/db/migrate/20141002130129_new_suse_bugzillas.rb
      cd /srv/www/obs/api/
      RAILS_ENV="production" rails.ruby2.5 db:migrate:with_data
      
      chown -R wwwrun.www /srv/www/obs/api/log
      chown -R wwwrun.www /srv/www/obs/api/tmp
      sed -ri '
          s@^(\s*PassengerRuby\s+"/usr/bin/ruby)(".*)$@\1.ruby2.5\2@
        ' /etc/apache2/conf.d/mod_passenger.conf
      
  - path: /root/Admin.sql
    owner: root:root
    permissions: '0400'
    content: |
      update
          users
        set
            login_failure_count=0,
            password='711af66c7a8ac55c148042e641dbde87',
            password_hash_type='md5',
            password_salt='RLl3wDwKCJ',
            password_crypted='osQq6OKjF0f8I',
            state='2'
        where
            login='Admin'
      ;

  - path: /root/mount_host.sh
    owner: root:root
    permissions: '0700'
    content: |
      #!/bin/bash
      set -e
      mkdir /host
      mount -t 9p -o trans=virtio,version=9p2000.L host0 /host || exit 1
      
  - path: /root/obs_be_seed.sh
    owner: root:root
    permissions: '0700'
    content: |
      #!/bin/bash
      set -e

      bd="be"
      if
          test -r "/host/${bd}.tgz"
      then
          echo "Importing ${bd}.tgz"
          tar xfzv /host/"${bd}".tgz -C /srv/obs/
          echo "Imported ${bd}.tgz"
      else
          echo "No OBS backend dump ${bd}.tgz found, ignoring."
      fi
      
  - path: /root/obs_fe_seed.sh
    owner: root:root
    permissions: '0700'
    content: |
      #!/bin/bash
      set -e

      db="api_production"
      if
          test -r "/host/${db}.sql"
      then
          echo "Importing ${db}.sql"
          mysql -u root -p'skytree' "${db}" < "/host/${db}.sql"
          echo "Imported ${db}.sql"
      else
          echo "No SQL dump for ${db}, ignoring."
      fi
      {
          find /host/ -name "${db}.patch-*.sql" -print0 |
              sort -zn |
                  xargs -0 -r -n 1 -I @ cat @
      } | mysql -u root -p'skytree' "${db}"
      
runcmd:
  - [ /root/mount_host.sh ]
  - [ rm, -f, /root/mount_host.sh ]
  - [ /root/obs_be_seed.sh ]
  - [ rm, -f, /root/obs_be_seed.sh ]
  - [ systemctl, start, obsrepserver ]
  - [ systemctl, start, obssrcserver ]
  - [ systemctl, start, mysql ]
  - [ /root/db_init.sh ]
  - [ /root/db_populate.sh ]
  - [ rm, -f, /root/my.defaults, /root/db_init.sh, /root/db_populate.sh ]
  - [ /root/apache_config.sh ]
  - [ rm, -f, /root/apache_config.sh ]
  - [ /root/cert_setup.sh ]
  - [ rm, -f, /root/cert_setup.sh ]
  - [ /root/fixup.sh ]
  - [ rm, -f, /root/fixup.sh ]
  - [ /root/obs_fe_seed.sh ]
  - [ rm, -f, /root/obs_fe_seed.sh ]
  - [ /root/update.sh ]
  - [ /root/services.sh, enable, start ]
  - [ rm, -f, /root/update.sh, /root/services.sh ]

final_message: "---- cloud-init finished ----"
